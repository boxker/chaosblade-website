"use strict";(self.webpackChunkchaosblade=self.webpackChunkchaosblade||[]).push([[9171],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),p=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,k=u["".concat(d,".").concat(m)]||u[m]||c[m]||i;return n?r.createElement(k,l(l({ref:t},s),{},{components:n})):r.createElement(k,l({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=u;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},89770:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return c},frontMatter:function(){return i},metadata:function(){return o},toc:function(){return p}});var r=n(87462),a=(n(67294),n(3905));const i={title:"Simulating expiring the key in redis"},l=void 0,o={unversionedId:"experiment-types/host/redis/blade_create_redis_cache_expire",id:"experiment-types/host/redis/blade_create_redis_cache_expire",title:"Simulating expiring the key in redis",description:"Introduction",source:"@site/docs/experiment-types/host/redis/blade_create_redis_cache_expire.md",sourceDirName:"experiment-types/host/redis",slug:"/experiment-types/host/redis/blade_create_redis_cache_expire",permalink:"/en/docs/next/experiment-types/host/redis/blade_create_redis_cache_expire",draft:!1,editUrl:"https://github.com/chaosblade-io/chaosblade-website/edit/master/docs/experiment-types/host/redis/blade_create_redis_cache_expire.md",tags:[],version:"current",frontMatter:{title:"Simulating expiring the key in redis"},sidebar:"myAutogeneratedSidebar",previous:{title:"Redis",permalink:"/en/docs/next/experiment-types/host/redis/"},next:{title:"Simulating setting the memory limit of redis cache",permalink:"/en/docs/next/experiment-types/host/redis/blade_create_redis_cache_limit"}},d={},p=[{value:"Introduction",id:"introduction",level:2},{value:"CLI Command",id:"cli-command",level:2},{value:"Parameter",id:"parameter",level:2},{value:"Case",id:"case",level:2},{value:"Principle",id:"principle",level:2},{value:"Q&amp;A",id:"qa",level:2}],s={toc:p};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"An experiment that simulates expiring the key in redis by modifying the key expiration time\u3002"),(0,a.kt)("h2",{id:"cli-command"},"CLI Command"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"blade create redis cache-expire -h"))),(0,a.kt)("h2",{id:"parameter"},"Parameter"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Introduction"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Required"),(0,a.kt)("th",{parentName:"tr",align:null},"Example Value"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"addr")),(0,a.kt)("td",{parentName:"tr",align:null},"The address of redis server, the format is ",(0,a.kt)("inlineCode",{parentName:"td"},"ip:port"),"."),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"Y")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"192.168.56.101:6379"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"password")),(0,a.kt)("td",{parentName:"tr",align:null},"The password of redis server."),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"Y")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"123456"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"key")),(0,a.kt)("td",{parentName:"tr",align:null},"The key to be set an expiry, default expires all keys. The default value is ",(0,a.kt)("inlineCode",{parentName:"td"},'""'),"."),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"N")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"test1"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"expiry")),(0,a.kt)("td",{parentName:"tr",align:null},'The expiry of the key. An expiry string should be able to be converted to a time duration, such as "5s" or "30m".'),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"Y")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"10s"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"option")),(0,a.kt)("td",{parentName:"tr",align:null},"The additional options of expiry, only NX, XX, GT, LT supported."),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"N")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"GT"))))),(0,a.kt)("h2",{id:"case"},"Case"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},'# Set the expiration time to 1 minute.\n# blade create redis cache-expire --addr 192.168.56.101:6379 --password 123456 --key test1 --expiry 1m\n{"code":200,"success":true,"result":"b6a0f477b7fb1f4c"}\n\n# Set the expiration time when the new expiration time is greater than current one.\n# blade create redis cache-expire --addr 192.168.56.101:6379 --password 123456 --key test1 --option GT --expiry 1m\n{"code":200,"success":true,"result":"b6a0f477b7fb1f4c"}\n')),(0,a.kt)("h2",{id:"principle"},"Principle"),(0,a.kt)("p",null,"Modify the expiration time by using Golang interface in go-redis package."),(0,a.kt)("h2",{id:"qa"},"Q&A"),(0,a.kt)("p",null,'Q: {"code":44000,"success":false,"error":"',(0,a.kt)("inlineCode",{parentName:"p"},'parse duration error: time: missing unit in duration \\"1\\"'),': action not supported"}'),(0,a.kt)("p",null,'A\uff1a An expiry string should be able to be converted to a time duration, such as "5s" or "30m".'))}c.isMDXComponent=!0}}]);