"use strict";(self.webpackChunkchaosblade=self.webpackChunkchaosblade||[]).push([[6431],{3905:function(e,t,n){n.d(t,{Zo:function(){return i},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),u=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},i=function(e){var t=u(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,b=d["".concat(c,".").concat(m)]||d[m]||p[m]||l;return n?a.createElement(b,o(o({ref:t},i),{},{components:n})):a.createElement(b,o({ref:t},i))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var u=2;u<l;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},52991:function(e,t,n){n.d(t,{Z:function(){return g}});var a=n(67294),r=n(86010),l=n(52802),o=n(39960),s=n(13919),c=n(95999),u="cardContainer_fWXF",i="cardTitle_rnsV",p="cardDescription_PWke";function d(e){let{href:t,children:n}=e;return a.createElement(o.Z,{href:t,className:(0,r.Z)("card padding--lg",u)},n)}function m(e){let{href:t,icon:n,title:l,description:o}=e;return a.createElement(d,{href:t},a.createElement("h2",{className:(0,r.Z)("text--truncate",i),title:l},n," ",l),o&&a.createElement("p",{className:(0,r.Z)("text--truncate",p),title:o},o))}function b(e){let{item:t}=e;const n=(0,l.Wl)(t);return n?a.createElement(m,{href:n,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:(0,c.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t.items.length})}):null}function h(e){let{item:t}=e;const n=(0,s.Z)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",r=(0,l.xz)(t.docId??void 0);return a.createElement(m,{href:t.href,icon:n,title:t.label,description:null==r?void 0:r.description})}function k(e){let{item:t}=e;switch(t.type){case"link":return a.createElement(h,{item:t});case"category":return a.createElement(b,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function f(e){let{className:t}=e;const n=(0,l.jA)();return a.createElement(g,{items:n.items,className:t})}function g(e){const{items:t,className:n}=e;if(!t)return a.createElement(f,e);const o=(0,l.MN)(t);return a.createElement("section",{className:(0,r.Z)("row",n)},o.map(((e,t)=>a.createElement("article",{key:t,className:"col col--6 margin-bottom--lg"},a.createElement(k,{item:e})))))}},33621:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return i}});var a=n(87462),r=(n(67294),n(3905)),l=n(52991);const o={title:"Kubernetes",sidebar_position:2},s=void 0,c={unversionedId:"experiment-types/k8s/k8s",id:"experiment-types/k8s/k8s",title:"Kubernetes",description:"\u4ecb\u7ecd",source:"@site/docs/experiment-types/k8s/k8s.md",sourceDirName:"experiment-types/k8s",slug:"/experiment-types/k8s/",permalink:"/en/docs/next/experiment-types/k8s/",draft:!1,editUrl:"https://github.com/chaosblade-io/chaosblade-website/edit/master/docs/experiment-types/k8s/k8s.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Kubernetes",sidebar_position:2},sidebar:"myAutogeneratedSidebar",previous:{title:"Simulating the system time offset",permalink:"/en/docs/next/experiment-types/host/time/blade_create_time_travel"},next:{title:"Pod",permalink:"/en/docs/next/experiment-types/k8s/pod/"}},u={},i=[{value:"\u4ecb\u7ecd",id:"\u4ecb\u7ecd",level:2},{value:"\u90e8\u7f72",id:"\u90e8\u7f72",level:2},{value:"\u521b\u5efa\u5b9e\u9a8c",id:"\u521b\u5efa\u5b9e\u9a8c",level:2},{value:"\u4fee\u6539\u5b9e\u9a8c",id:"\u4fee\u6539\u5b9e\u9a8c",level:2},{value:"\u9500\u6bc1\u5b9e\u9a8c",id:"\u9500\u6bc1\u5b9e\u9a8c",level:2},{value:"\u5378\u8f7d",id:"\u5378\u8f7d",level:2},{value:"\u5e38\u89c1\u95ee\u9898",id:"\u5e38\u89c1\u95ee\u9898",level:2}],p={toc:i};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"\u4ecb\u7ecd"},"\u4ecb\u7ecd"),(0,r.kt)("p",null,"\u521b\u5efa kubernetes \u76f8\u5173\u7684\u5b9e\u9a8c\u573a\u666f\uff0c\u9664\u4e86\u4f7f\u7528 blade \u547d\u4ee4\u521b\u5efa\u573a\u666f\u5916\uff0c\u8fd8\u53ef\u4ee5\u5c06\u5b9e\u9a8c\u4f7f\u7528 yaml \u6587\u4ef6\u63cf\u8ff0\uff0c\u4f7f\u7528 kubectl \u547d\u4ee4\u6267\u884c\u3002\u76ee\u524d\u652f\u6301\u7684\u5b9e\u9a8c\u573a\u666f\u5982\u4e0b\uff1a"),(0,r.kt)(l.Z,{mdxType:"DocCardList"}),(0,r.kt)("h2",{id:"\u90e8\u7f72"},"\u90e8\u7f72"),(0,r.kt)("p",null,"\u6267\u884c Kubernetes \u5b9e\u9a8c\u573a\u666f\uff0c\u9700\u8981\u63d0\u524d\u90e8\u7f72 ChaosBlade Operator\uff0cHelm \u5b89\u88c5\u5305\u4e0b\u8f7d\u5730\u5740\uff1a",(0,r.kt)("a",{parentName:"p",href:"https://github.com/chaosblade-io/chaosblade-operator/releases"},"https://github.com/chaosblade-io/chaosblade-operator/releases")," \u3002\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"helm install --namespace kube-system --name chaosblade-operator chaosblade-operator-<VERSION>.tgz\n")),(0,r.kt)("p",null,"\u4f1a\u5b89\u88c5\u5728 kube-system \u547d\u4ee4\u7a7a\u95f4\u4e0b\u3002ChaosBlade Operator \u542f\u52a8\u540e\u4f1a\u5728\u6bcf\u4e2a\u8282\u70b9\u90e8\u7f72 chaosblade-tool Pod \u548c\u4e00\u4e2a chaosblade-operator Pod.\u53ef\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u67e5\u770b\u5b89\u88c5\u7ed3\u679c:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"kubectl get pod -n kube-system -o wide | grep chaosblade\n")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/3992234/68177275-c4ae3400-ffc2-11e9-9306-77956412242e.png",alt:"install-result"})),(0,r.kt)("p",null,"\u5982\u679c\u663e\u793a chaosblade-operator \u548c chaosblade-tool Pod \u90fd\u5904\u4e8e Running \u72b6\u6001\uff0c\u8bf4\u660e\u90e8\u7f72\u6210\u529f\uff0c\u5982\u679c\u90e8\u7f72\u51fa\u73b0\u95ee\u9898\uff0c\u53ef\u8be6\u89c1\u4e0b\u53d1\u7684 QA\u3002"),(0,r.kt)("h2",{id:"\u521b\u5efa\u5b9e\u9a8c"},"\u521b\u5efa\u5b9e\u9a8c"),(0,r.kt)("p",null,"\u6267\u884c\u65b9\u5f0f\u6709\u4e24\u79cd\uff0c\u4e00\u662f\u901a\u8fc7\u914d\u7f6e yaml \u65b9\u5f0f\uff0c\u4f7f\u7528 kubectl \u6267\u884c\uff0c\u53e6\u4e00\u79cd\u662f\u76f4\u63a5\u4f7f\u7528 chaosblade \u5305\u4e2d\u7684 blade \u547d\u4ee4\u6267\u884c\uff0c\u4e0b\u9762\u4ee5\u6307\u5b9a\u4e00\u53f0\u8282\u70b9\uff0c\u505a CPU \u8d1f\u8f7d 80% \u5b9e\u9a8c\u4e3e\u4f8b\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"yaml \u914d\u7f6e\u65b9\u5f0f")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: chaosblade.io/v1alpha1\nkind: ChaosBlade\nmetadata:\n  name: cpu-load\nspec:\n  experiments:\n    - scope: node\n      target: cpu\n      action: fullload\n      desc: "increase node cpu load by names"\n      matchers:\n        - name: names\n          value:\n            - "cn-hangzhou.192.168.0.205"\n        - name: cpu-percent\n          value:\n            - "80"\n')),(0,r.kt)("p",null,"\u4f8b\u5982\u914d\u7f6e\u597d\u6587\u4ef6\u540e\uff0c\u4fdd\u5b58\u4e3a chaosblade_cpu_load.yaml\uff0c\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6267\u884c\u5b9e\u9a8c\u573a\u666f\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"kubectl apply -f chaosblade_cpu_load.yaml\n")),(0,r.kt)("p",null,"\u53ef\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u67e5\u770b\u6bcf\u4e2a\u5b9e\u9a8c\u7684\u6267\u884c\u72b6\u6001\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"kubectl get blade cpu-load -o json\n")),(0,r.kt)("p",null,"\u66f4\u591a\u7684\u5b9e\u9a8c\u573a\u666f\u914d\u7f6e\u4e8b\u4f8b\u53ef\u67e5\u770b: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/chaosblade-io/chaosblade-operator/tree/master/examples"},"https://github.com/chaosblade-io/chaosblade-operator/tree/master/examples")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"blade \u547d\u4ee4\u6267\u884c\u65b9\u5f0f"),"\n\u4e0b\u8f7d chaosblade \u5de5\u5177\u5305\uff0c\u4e0b\u8f7d\u5730\u5740\uff1a",(0,r.kt)("a",{parentName:"p",href:"https://github.com/chaosblade-io/chaosblade/releases"},"https://github.com/chaosblade-io/chaosblade/releases")," \uff0c\u89e3\u538b\u5373\u53ef\u4f7f\u7528\u3002\u8fd8\u662f\u4e0a\u8ff0\u4f8b\u5b50\uff0c\u4f7f\u7528 blade \u547d\u4ee4\u6267\u884c\u5982\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"blade create k8s node-cpu fullload --names cn-hangzhou.192.168.0.205 --cpu-percent 80 --kubeconfig ~/.kube/config\n")),(0,r.kt)("p",null,"\u4f7f\u7528 blade \u547d\u4ee4\u6267\u884c\uff0c\u5982\u679c\u6267\u884c\u5931\u8d25\uff0c\u4f1a\u8fd4\u56de\u8be6\u7ec6\u7684\u9519\u8bef\u4fe1\u606f\uff1b\u5982\u679c\u6267\u884c\u6210\u529f\uff0c\u4f1a\u8fd4\u56de\u5b9e\u9a8c\u7684 UID\uff0c\u4f7f\u7528\u67e5\u8be2\u547d\u4ee4\u53ef\u4ee5\u67e5\u8be2\u8be6\u7ec6\u7684\u5b9e\u9a8c\u7ed3\u679c\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"blade query k8s create <UID>\n")),(0,r.kt)("h2",{id:"\u4fee\u6539\u5b9e\u9a8c"},"\u4fee\u6539\u5b9e\u9a8c"),(0,r.kt)("p",null,"yaml \u914d\u7f6e\u6587\u4ef6\u7684\u65b9\u5f0f\u652f\u6301\u573a\u666f\u52a8\u6001\u4fee\u6539\uff0c\u6bd4\u5982\u5c06\u4e0a\u8ff0\u7684 cpu \u8d1f\u8f7d\u8c03\u6574\u4e3a 60%\uff0c\u5219\u53ea\u9700\u5c06\u4e0a\u8ff0 value \u7684\u503c\u4ece 80 \u6539\u4e3a 60 \u5373\u53ef\uff0c\u4f8b\u5982\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: chaosblade.io/v1alpha1\nkind: ChaosBlade\nmetadata:\n  name: cpu-load\nspec:\n  experiments:\n    - scope: node\n      target: cpu\n      action: fullload\n      desc: "increase node cpu load by names"\n      matchers:\n        - name: names\n          value:\n            - "cn-hangzhou.192.168.0.205"\n        - name: cpu-percent\n          value:\n            - "80"\n')),(0,r.kt)("p",null,"\u7136\u540e\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"kubeclt apply -f chaosblade_cpu_load.yaml")," \u547d\u4ee4\u6267\u884c\u66f4\u65b0\u5373\u53ef\u3002"),(0,r.kt)("h2",{id:"\u9500\u6bc1\u5b9e\u9a8c"},"\u9500\u6bc1\u5b9e\u9a8c"),(0,r.kt)("p",null,"\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4e09\u79cd\u65b9\u5f0f\u505c\u6b62\u5b9e\u9a8c\uff1a\n",(0,r.kt)("strong",{parentName:"p"},"\u6839\u636e\u5b9e\u9a8c\u8d44\u6e90\u540d\u505c\u6b62"),"\n\u6bd4\u5982\u4e0a\u8ff0 cpu-load \u573a\u666f\uff0c\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u505c\u6b62\u5b9e\u9a8c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"kubectl delete chaosblade cpu-load\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u901a\u8fc7 yaml \u914d\u7f6e\u6587\u4ef6\u505c\u6b62"),"\n\u6307\u5b9a\u4e0a\u8ff0\u521b\u5efa\u597d\u7684 yaml \u6587\u4ef6\u8fdb\u884c\u5220\u9664\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"kubectl delete -f chaosblade_cpu_load.yaml\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u901a\u8fc7 blade \u547d\u4ee4\u505c\u6b62"),"\n\u6b64\u65b9\u5f0f\u4ec5\u9650\u4f7f\u7528 blade \u521b\u5efa\u7684\u5b9e\u9a8c\uff0c\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u505c\u6b62\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"blade destroy <UID>\n")),(0,r.kt)("p",null,"UID \u662f\u6267\u884c blade create \u547d\u4ee4\u8fd4\u56de\u7684\u7ed3\u679c\uff0c\u5982\u679c\u5fd8\u8bb0\uff0c\u53ef\u4f7f\u7528 blade status --type create \u547d\u4ee4\u67e5\u8be2"),(0,r.kt)("h2",{id:"\u5378\u8f7d"},"\u5378\u8f7d"),(0,r.kt)("p",null,"\u6267\u884c ",(0,r.kt)("inlineCode",{parentName:"p"},"helm del --purge chaosblade-operator")," \u5378\u8f7d\u5373\u53ef\uff0c\u5c06\u4f1a\u505c\u6b62\u5168\u90e8\u5b9e\u9a8c\uff0c\u5220\u9664\u6240\u6709\u521b\u5efa\u7684\u8d44\u6e90\u3002"),(0,r.kt)("h2",{id:"\u5e38\u89c1\u95ee\u9898"},"\u5e38\u89c1\u95ee\u9898"),(0,r.kt)("p",null,'Q:validation failure list:spec.experiments.matchers.value in body must be of type array: "string"\nA: \u6240\u6709 matchers \u4e2d value \u53c2\u6570\u5fc5\u987b\u662f\u5b57\u7b26\u4e32\u6570\u7ec4\uff0c\u4f8b\u5982\uff1a'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'- name: names\n  value: ["cn-hangzhou.192.168.0.205"]\n')),(0,r.kt)("p",null,"\u6216\u8005"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'- name: names\n  value:\n    - "cn-hangzhou.192.168.0.205"\n')),(0,r.kt)("p",null,'Q\uff1a{"code":800,"success":false,"error":"unable to load in-cluster configuration, KUBERNETES_SERVICE_HOST and KUBERNETES_SERVICE_PORT must be defined","result":{"uid":"08dec77bd45c8e55","success":false,"error":"unable to load in-cluster configuration, KUBERNETES_SERVICE_HOST and KUBERNETES_SERVICE_PORT must be defined","statuses":','[{"id":"08dec77bd45c8e55","state":"Error","kind":"","error":"unable to load in-cluster configuration, KUBERNETES_SERVICE_HOST and KUBERNETES_SERVICE_PORT must be defined","success":false}]',"}}\nA\uff1a\u6ca1\u6709\u6307\u5b9a --kubeconfig \u6587\u4ef6\u8def\u5f84"),(0,r.kt)("p",null,'Q: {"code":504,"success":false,"error":"unexpected status, the real value is Error","result":{"uid":"78abb71fb0587c2e","success":false,"error":"unexpected status, the real value is Error","statuses":','[{"state":"Error","kind":"","error":"must specify one flag in evict-count,evict-percent,labels,names","success":false}]',"}}\nA: \u7f3a\u5c11\u5fc5\u8981\u53c2\u6570"))}d.isMDXComponent=!0}}]);